pipeline {
    agent any
    environment {
        GIT_URL='https://github.com/jtom38/docker-ansible.git'
        GIT_BRANCH='main'
        DOCKER_IMAGE='jtom38/ansible'
        DOCKER_TAG_1='2.9.11'
        DOCKER_TAG_2='2.10.3'
        GITHUB_SITE='docker.pkg.github.com'
        TF_VER='0.13.5'
    }

    stages {
        stage('Pull-Source') {
            steps {
                sh '''#!/bin/bash
                rm -r ./workspace || echo "directory was not found and thats okay"
                git clone ${GIT_URL} workspace
                cd ./workspace
                git checkout ${GIT_BRANCH}
                '''
            }
        }
        stage('Build-Image-2.9') {
            steps {
                sh '''#!/bin/bash
                cd ./workspace
                docker build -t jtom38/ansible:2.9.11 . --build-arg ANSIBLE_VER=2.9.11 --build-arg TF_VER=${TF_VER}
                '''
            }
        }
        stage('Test-Image-2.9'){
            // Spawn the image and run the version commands to make sure the applications installed.
            agent{
                docker {
                    image 'jtom38/ansible:2.9.11'
                    args '-u 0:0'
                }
            }
            steps {
                sh '''#!/bin/bash
                ansible --version
                terraform --version
                molecule --version
                docker --version
                '''
            }
        }
        stage('Push-Image-2.9-Hub'){
            steps{
                withCredentials([string(credentialsId: 'docker-password-secret', variable: 'DOCKERPASS')]) {
                    sh '''#!/bin/bash
                    echo ${DOCKERPASS} | docker login -u jtom38 --password-stdin
                    docker push jtom38/ansible:2.9.11
                    docker logout
                    '''
                }
            }
        }
        stage('Push-Image-2.9-GH'){
            steps {
                withCredentials([string(credentialsId: 'github-password-secret', variable: 'DOCKERPASS')]) {
                    sh '''#!/bin/bash
                    echo ${DOCKERPASS} | docker login docker.pkg.github.com -u jtom38 --password-stdin
                    docker tag jtom38/ansible:2.9.11 docker.pkg.github.com/jtom38/docker-ansible/ansible:2.9.11
                    docker push docker.pkg.github.com/jtom38/docker-ansible/ansible:2.9.11
                    docker logout ghcr.io
                    docker rmi docker.pkg.github.com/jtom38/docker-ansible/ansible:2.9.11
                    '''
                }
            }
        }
        stage('Build-Image-2.10') {
            steps {
                sh '''#!/bin/bash
                cd ./workspace
                docker build -t jtom38/ansible:2.10.3 . --build-arg ANSIBLE_VER=2.10.3 --build-arg TF_VER=${TF_VER}
                '''
            }
        }
        stage('Test-Image-2.10') {
            agent {
                docker {
                    image 'jtom38/ansible:2.10.3'
                    args '-u 0:0'
                }
            }
            steps {
                sh '''#!/bin/bash
                ansible --version
                terraform --version
                molecule --version
                docker --version
                '''
            }
        }
        stage('Push-Image-2.10-Hub'){
            steps{
                withCredentials([string(credentialsId: 'docker-password-secret', variable: 'DOCKERPASS')]) {
                    sh '''#!/bin/bash
                    echo ${DOCKERPASS} | docker login -u jtom38 --password-stdin
                    docker push jtom38/ansible:2.10.3
                    docker logout
                    '''
                }
            }
        }
        stage('Push-Image-2.10-GH'){
            steps {
                withCredentials([string(credentialsId: 'github-password-secret', variable: 'DOCKERPASS')]) {
                    sh '''#!/bin/bash
                    echo ${DOCKERPASS} | docker login docker.pkg.github.com -u jtom38 --password-stdin
                    docker tag jtom38/ansible:2.10.3 docker.pkg.github.com/jtom38/docker-ansible/ansible:2.10.3
                    docker push docker.pkg.github.com/jtom38/docker-ansible/ansible:2.10.3
                    docker logout docker.pkg.github.com
                    docker rmi docker.pkg.github.com/jtom38/docker-ansible/ansible:2.10.3
                    '''
                }
            }
        }
        stage('Build-Image-Latest') {
            steps {
                sh '''#!/bin/bash
                cd ./workspace
                docker build -t jtom38/ansible:latest . --build-arg ANSIBLE_VER=2.10.3 --build-arg TF_VER=${TF_VER}
                '''
            }
        }
        stage('Test-Image-Latest') {
            agent {
                docker {
                    image 'jtom38/ansible:latest'
                    args '-u 0:0'
                }
            }
            steps {
                sh '''#!/bin/bash
                ansible --version
                terraform --version
                molecule --version
                docker --version
                '''
            }
        }
        stage('Push-Image-Latest-Hub'){
            steps{
                withCredentials([string(credentialsId: 'docker-password-secret', variable: 'DOCKERPASS')]) {
                    sh '''#!/bin/bash
                    echo ${DOCKERPASS} | docker login -u jtom38 --password-stdin
                    docker push jtom38/ansible:latest
                    docker logout
                    '''
                }
            }
        }
        stage('Push-Image-Latest-GH'){
            steps {
                withCredentials([string(credentialsId: 'github-password-secret', variable: 'DOCKERPASS')]) {
                    sh '''#!/bin/bash
                    echo ${DOCKERPASS} | docker login docker.pkg.github.com -u jtom38 --password-stdin
                    docker tag jtom38/ansible:latest docker.pkg.github.com/jtom38/docker-ansible/ansible:latest
                    docker push docker.pkg.github.com/jtom38/docker-ansible/ansible:latest
                    docker logout docker.pkg.github.com
                    docker rmi docker.pkg.github.com/jtom38/docker-ansible/ansible:latest
                    '''
                }
            }
        }
    }
}